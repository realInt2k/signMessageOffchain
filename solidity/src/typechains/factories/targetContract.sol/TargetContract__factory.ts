/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TargetContract,
  TargetContractInterface,
} from "../../targetContract.sol/TargetContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "a",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "append",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "change",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getA",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610481806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633a52c7c214610051578063d46300fd1461006d578063e33b87071461008b578063f0fdf834146100a7575b600080fd5b61006b60048036038101906100669190610228565b6100d7565b005b610075610145565b6040516100829190610326565b60405180910390f35b6100a560048036038101906100a09190610348565b61019d565b005b6100c160048036038101906100bc9190610348565b6101c9565b6040516100ce9190610384565b60405180910390f35b600080549050821061011e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610115906103fc565b60405180910390fd5b80600083815481106101335761013261041c565b5b90600052602060002001819055505050565b6060600080548060200260200160405190810160405280929190818152602001828054801561019357602002820191906000526020600020905b81548152602001906001019080831161017f575b5050505050905090565b600081908060018154018082558091505060019003906000526020600020016000909190919091505550565b600081815481106101d957600080fd5b906000526020600020016000915090505481565b600080fd5b6000819050919050565b610205816101f2565b811461021057600080fd5b50565b600081359050610222816101fc565b92915050565b6000806040838503121561023f5761023e6101ed565b5b600061024d85828601610213565b925050602061025e85828601610213565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61029d816101f2565b82525050565b60006102af8383610294565b60208301905092915050565b6000602082019050919050565b60006102d382610268565b6102dd8185610273565b93506102e883610284565b8060005b8381101561031957815161030088826102a3565b975061030b836102bb565b9250506001810190506102ec565b5085935050505092915050565b6000602082019050818103600083015261034081846102c8565b905092915050565b60006020828403121561035e5761035d6101ed565b5b600061036c84828501610213565b91505092915050565b61037e816101f2565b82525050565b60006020820190506103996000830184610375565b92915050565b600082825260208201905092915050565b7f6f7574206f6620626f756e640000000000000000000000000000000000000000600082015250565b60006103e6600c8361039f565b91506103f1826103b0565b602082019050919050565b60006020820190508181036000830152610415816103d9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220fd728a082492efd7df988540aa07edb5094fa181f231655ddb9639db46801d4964736f6c634300080d0033";

type TargetContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TargetContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TargetContract__factory extends ContractFactory {
  constructor(...args: TargetContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TargetContract> {
    return super.deploy(overrides || {}) as Promise<TargetContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TargetContract {
    return super.attach(address) as TargetContract;
  }
  override connect(signer: Signer): TargetContract__factory {
    return super.connect(signer) as TargetContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TargetContractInterface {
    return new utils.Interface(_abi) as TargetContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TargetContract {
    return new Contract(address, _abi, signerOrProvider) as TargetContract;
  }
}
